{"version":3,"sources":["serviceWorker.js","components/Pencil.js","components/SketchPad.js","components/Button.js","components/SketchExample.js","index.js"],"names":["Boolean","window","location","hostname","match","TOOL_PENCIL","toolsMap","Object","defineProperty","context","stroke","points","drawLine","item","start","_ref","x","y","save","lineJoin","lineCap","beginPath","lineWidth","size","strokeStyle","color","globalCompositeOperation","moveTo","lineTo","closePath","restore","onMouseMove","newPoint","slice","push","onMouseDown","id","v4","tool","onDebouncedMouseMove","debouncedPoints","onMouseUp","draw","animate","time","i","j","length","setTimeout","bind","SketchPad","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","interval","initTool","assertThisInitialized","onDebouncedMove","canvas","findDOMNode","canvasRef","ctx","getContext","_this2","items","data","currentItem","filter","indexOf","forEach","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","obj","value","err","return","resetCurrent","e","_this$tool","apply","toConsumableArray","getCursorPosition","concat","fillColor","onItemStart","onDebouncedItemChange","setInterval","debounceTime","_this$tool2","onEveryItemChange","_this$tool3","onCompleteItem","clearInterval","onNewClickHandler","current","_this$canvas$getBound","getBoundingClientRect","top","left","clientX","clientY","_this3","_this$props","width","height","canvasClassName","react_default","a","createElement","ref","className","onMouseOut","Component","Button","react","type","disabled","isEnable","onClick","onClickHandlker","defaultProps","SketchExample","console","log","records","state","val","setState","clicks","enableUndo","fill","total","saveHandler","undoLastDrawing","history","JSON","parse","localStorage","getItem","setItem","parseInt","stringify","_this$state","style","display","flexDirection","alignItems","flexGrow","float","marginRight","border","SketchPad_SketchPad","ReactDOM","render","SketchExample_SketchExample","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93f416fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { v4 } from 'uuid';\n\nexport const TOOL_PENCIL = 'pencil';\n\nexport default (context) => {\n  let stroke = null;\n  let points = [];\n\n  const onMouseDown = (x, y, color, size) => {\n    stroke = {\n      id: v4(),\n      tool: TOOL_PENCIL,\n      color,\n      size,\n      points: [{ x, y }]\n    };\n    return [stroke];\n  };\n\n  const drawLine = (item, start, { x, y }) => {\n    // console.log('item.color', item.color)\n    context.save();\n    context.lineJoin = 'round';\n    context.lineCap = 'round';\n    context.beginPath();\n    context.lineWidth = item.size;\n    context.strokeStyle = item.color;\n    context.globalCompositeOperation = 'source-over';\n    context.moveTo(start.x, start.y);\n    context.lineTo(x, y);\n    context.closePath();\n    context.stroke();\n    context.restore();\n  };\n\n  const onMouseMove = (x, y) => {\n    if (!stroke) return [];\n    const newPoint = { x, y };\n    const start = stroke.points.slice(-1)[0];\n    drawLine(stroke, start, newPoint);\n    stroke.points.push(newPoint);\n    points.push(newPoint);\n    \n    return [stroke];\n  };\n\n  const onDebouncedMouseMove = () => {\n    const debouncedPoints = points;\n    points = [];\n    return [stroke, debouncedPoints];\n  };\n\n  const onMouseUp = (x, y) => {\n    if (!stroke) return;\n    onMouseMove(x, y);\n    points = [];\n    const item = stroke;\n    stroke = null;\n    return [item];\n  };\n\n  const draw = (item, animate) => {\n    let time = 0;\n    let i = 0;\n    const j = item.points.length;\n    for (i, j; i < j; i++) {\n      if (!item.points[i - 1]) continue;\n      if (animate) {\n        setTimeout(drawLine.bind(null, item, item.points[i - 1], item.points[i]), time);\n        time += 10;\n      } else {\n        drawLine(item, item.points[i - 1], item.points[i]);\n      }\n    }\n  };\n\n  return {\n    onMouseDown,\n    onMouseMove,\n    onDebouncedMouseMove,\n    onMouseUp,\n    draw,\n  };\n};\n","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Pencil, { TOOL_PENCIL } from './Pencil';\nimport PropTypes from 'prop-types';\n\nexport const toolsMap = {\n  [TOOL_PENCIL]: Pencil,\n};\n\nexport default class SketchPad extends Component {\n\n  tool = null;\n  interval = null;\n\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    items: PropTypes.array.isRequired,\n    animate: PropTypes.bool,\n    canvasClassName: PropTypes.string,\n    color: PropTypes.string,\n    fillColor: PropTypes.string,\n    size: PropTypes.number,\n    tool: PropTypes.string,\n    toolsMap: PropTypes.object,\n    onItemStart: PropTypes.func, // function(stroke:Stroke) { ... }\n    onEveryItemChange: PropTypes.func, // function(idStroke:string, x:number, y:number) { ... }\n    onDebouncedItemChange: PropTypes.func, // function(idStroke, points:Point[]) { ... }\n    onCompleteItem: PropTypes.func, // function(stroke:Stroke) { ... }\n    debounceTime: PropTypes.number,\n    current: PropTypes.number,\n    data: PropTypes.array\n  };\n\n  static defaultProps = {\n    width: 500,\n    height: 500,\n    color: 'green',\n    size: 5,\n    fillColor: '',\n    canvasClassName: 'canvas',\n    debounceTime: 1000,\n    animate: true,\n    tool: TOOL_PENCIL,\n    toolsMap,\n    data: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.initTool = this.initTool.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onDebouncedMove = this.onDebouncedMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n\n  }\n\n\n  componentDidMount() {\n    this.canvas = findDOMNode(this.canvasRef);\n    this.ctx = this.canvas.getContext('2d');\n    this.initTool(this.props.tool);\n\n  }\n\n  componentWillReceiveProps({ tool, items, data, currentItem }) {\n    items\n      .filter(item => this.props.items.indexOf(item) === -1)\n      .forEach(item => {\n        this.initTool(item.tool);\n        this.tool.draw(item, this.props.animate);\n      });\n    this.initTool(tool);\n\n    if(data && data.length){\n      for (let obj of data){\n        \n        this.tool.draw(obj[0], this.props.animate);\n      }\n    }\n\n    if(currentItem && currentItem.length){\n      this.tool.draw(currentItem[0][0], this.props.animate);\n      this.props.resetCurrent()\n    }\n  }\n\n  initTool(tool) {\n    this.tool = this.props.toolsMap[tool](this.ctx);\n  }\n\n  onMouseDown(e) {\n    const data = this.tool.onMouseDown(...this.getCursorPosition(e), this.props.color, this.props.size, this.props.fillColor);\n    \n    data && data[0] && this.props.onItemStart && this.props.onItemStart.apply(null, data);\n    \n    if (this.props.onDebouncedItemChange) {\n      this.interval = setInterval(this.onDebouncedMove, this.props.debounceTime);\n    }\n  }\n\n  onDebouncedMove() {\n    if (typeof this.tool.onDebouncedMouseMove == 'function' && this.props.onDebouncedItemChange) {\n      this.props.onDebouncedItemChange.apply(null, this.tool.onDebouncedMouseMove());\n    }\n  }\n\n  onMouseMove(e) {\n    const data = this.tool.onMouseMove(...this.getCursorPosition(e));\n    data && data[0] && this.props.onEveryItemChange && this.props.onEveryItemChange.apply(null, data);\n\n    // this.setState({lastItem: data})\n  }\n\n  onMouseUp(e) {\n    const data = this.tool.onMouseUp(...this.getCursorPosition(e));\n    \n    data && data[0] && this.props.onCompleteItem && this.props.onCompleteItem.apply(null, data);\n    if (this.props.onDebouncedItemChange) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n    \n    this.props.onNewClickHandler(this.props.current, data)\n  }\n\n  getCursorPosition(e) {\n    const { top, left } = this.canvas.getBoundingClientRect();\n    return [\n      e.clientX - left,\n      e.clientY - top\n    ];\n  }\n\n  render() {\n    const { width, height, canvasClassName } = this.props;\n    return (\n      <canvas\n        ref={(canvas) => { this.canvasRef = canvas; }}\n        className={canvasClassName}\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n        onMouseOut={this.onMouseUp}\n        onMouseUp={this.onMouseUp}\n        width={width}\n        height={height}\n        \n      />\n    );\n  }\n}\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Button(props){\n    Button.propTypes = {\n              value: PropTypes.string,\n              onClickHandlker: PropTypes.func,\n              isEnable: PropTypes.bool,\n              type: PropTypes.string\n  }\n\n  return (<button type=\"button\" className={props.type} \n                  disabled={!props.isEnable}\n                  onClick={() => props.onClickHandlker()}>{props.value}\n                  </button>)\n}","import React, { Component } from 'react';\nimport SketchPad from './SketchPad'\nimport {TOOL_PENCIL} from './Pencil'\nimport Button from './Button'\n\nexport default class SketchExample extends Component\n{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tool:TOOL_PENCIL,\n      size: 2,\n      color: 'green',\n      fill: false,\n      fillColor: '#FFF',\n      items: [],\n      clicks: 0,\n      total: 0,\n      data: [],\n      currentItem:{},\n      enableUndo: false\n    }\n\n    this.saveHandler = this.saveHandler.bind(this);\n    this.undoLastDrawing = this.undoLastDrawing.bind(this);\n  }\n\n  componentDidMount() {\n    const history = JSON.parse(localStorage.getItem('history'))\n    const total = localStorage.getItem('total')\n\n    if(history && history.length){\n      this.setState({total: total ? total : 0, data: history})\n    }\n    this.setState({total: total ? total : 0})\n  }\n\n  onNewClickHandler = (current, data) => {\n    console.log('D', current, data)\n    \n    let {data: records} = this.state\n    const val = current + 1;\n\n    if(data) {\n      records.push(data)\n      \n      this.setState({clicks: val, data: records, enableUndo: true})\n    }else{\n      this.setState({clicks: val})\n    }\n\n  }\n\n  saveHandler (e){\n    \n    localStorage.setItem('total', parseInt(this.state.clicks, 10))\n    localStorage.setItem('history', JSON.stringify(this.state.data))\n\n    this.setState({total: parseInt(this.state.clicks, 10)})\n  }\n\n  undoLastDrawing (e) {\n    const currentItem = this.state.data.slice(-1)\n    \n    currentItem[0][0].color = 'white'\n    currentItem[0][0].size = 6\n    \n    this.setState({currentItem})\n  }\n\n  resetCurrent = () =>{\n    console.log('reseting')\n    this.setState({currentItem: [], enableUndo: false})\n  }\n\n  render() {\n    const { tool, size, color, items, clicks, data, currentItem, enableUndo } = this.state;\n    return (\n      <div style={{display: 'flex', flexDirection: 'column'}}>\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'stretch',}}>\n          <div style={{  flexGrow: 1, }}>\n            <label>Pencil color:</label>\n            <Button isEnable={true} type=\"btn btn-success button\" value=\"&nbsp;\" onClickHandlker={(e) => this.setState({color: 'green'})}/>\n            <Button isEnable={true} type=\"btn btn-danger button\" value=\"&nbsp;\" onClickHandlker={(e) => this.setState({color: 'red'})}/>\n            <Button isEnable={true} type=\"btn btn-dark button\" value=\"&nbsp;\" onClickHandlker={(e) => this.setState({color: 'black'})}/>\n            \n            <Button isEnable={true} type=\"btn btn-outline-success button\" value=\"Undo last click\" \n              onClickHandlker={this.undoLastDrawing} isEnable={enableUndo}/>\n            <Button isEnable={true} type=\"btn btn-outline-success button\" value=\"save\" \n              onClickHandlker={this.saveHandler}/>\n          </div>\n          <div style={{flexGrow: 8}}>\n            <div>\n              <label>click total:</label>{parseInt(this.state.total, 10)}\n            </div>\n            <div>\n              <label>clicks this session:</label>{this.state.clicks}\n            </div>\n          </div>\n        </div>\n        <div style={{float:'left', marginRight:20, border:'1px solid #d3d3d3'}}>\n          <SketchPad\n            width={1400}\n            height={500}\n            size={size}\n            color={color}\n            // fillColor={fill ? fillColor : ''}\n            items={items}\n            tool={tool}\n            current={clicks}\n            onNewClickHandler={this.onNewClickHandler}\n            data={data}\n            currentItem={currentItem}\n            resetCurrent={this.resetCurrent}\n          />\n        </div>\n        \n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SketchExample from './components/SketchExample'\n\nReactDOM.render(<SketchExample />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}